// Generated by CoffeeScript 1.6.3
(function() {
  var BasicPrimitive, Float, Integer, Schema, root, _;

  _ = require('underscore');

  BasicPrimitive = {
    toJson: function(datum) {
      return datum;
    }
  };

  Schema = _.extend({}, BasicPrimitive, {
    fromJson: function(datum) {
      if (datum.type === "Float") {
        return Float;
      } else if (datum.type === "Integer") {
        return Integer;
      } else if (datum.type === "Schema") {
        return Schema;
      }
    }
  });

  Integer = _.extend({}, BasicPrimitive, {
    fromJson: function(datum) {
      "If *datum* is an integer, return it; if it is a float with a 0 for\nits fractional part, return the integer part as an int. Otherwise,\nraise a :exc:`ValidationError`.";
      if (_.isNumber(datum) && datum % 1 === 0) {
        return datum;
      }
      throw new Error();
    }
  });

  Float = _.extend({}, BasicPrimitive, {
    fromJson: function(datum) {
      "If *datum* is an integer, return it; if it is a float with a 0 for\nits fractional part, return the integer part as an int. Otherwise,\nraise a :exc:`ValidationError`.";
      if (_.isNumber(datum)) {
        return datum;
      }
      throw new Error();
    }
  });

  root = {
    Schema: Schema,
    Integer: Integer,
    Float: Float
  };

  if (!((typeof module !== "undefined" && module !== null) || (typeof jQuery !== "undefined" && jQuery !== null) || (typeof requirejs !== "undefined" && requirejs !== null))) {
    this.teleport = root;
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = root;
  }

  if ((typeof requirejs !== "undefined" && requirejs !== null) && (typeof define !== "undefined" && define !== null)) {
    define(root);
  }

}).call(this);
